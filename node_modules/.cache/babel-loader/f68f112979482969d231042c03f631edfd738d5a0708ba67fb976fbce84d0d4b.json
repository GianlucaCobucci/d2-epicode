{"ast":null,"code":"var _jsxFileName = \"/Users/gianluca/VISUAL/d2/src/components/LatestRelease.js\",\n  _s = $RefreshSig$();\nimport { Container, Row } from 'react-bootstrap'; /* trovati online */\nimport jsonData from '../data/d2-json/fantasy.json';\nimport \"../Layout/BookCard.css\";\nimport MyBadge from './MyBadge';\nimport React, { useState } from 'react';\nimport SingleCard from './SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LatestReleasePage = () => {\n  _s();\n  const [selected, setSelected] = useState(false);\n  console.log(selected);\n  const toggleSelected = () => {\n    setSelected(!selected); //voglio che sia sempre il contrario di quello che è attualmente\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-5\",\n      children: \"Ultimi Arrivi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyBadge, {\n        str: \"Ciao\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          className: \"g-3\",\n          onClick: toggleSelected,\n          children: jsonData.map(book => /*#__PURE__*/_jsxDEV(SingleCard, {\n            title: book.title,\n            img: book.img,\n            author: book.author,\n            price: book.price,\n            asin: book.asin\n          }, book.asin, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(LatestReleasePage, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n_c = LatestReleasePage;\nexport default LatestReleasePage;\nvar _c;\n$RefreshReg$(_c, \"LatestReleasePage\");","map":{"version":3,"names":["Container","Row","jsonData","MyBadge","React","useState","SingleCard","jsxDEV","_jsxDEV","Fragment","_Fragment","LatestReleasePage","_s","selected","setSelected","console","log","toggleSelected","children","className","fileName","_jsxFileName","lineNumber","columnNumber","str","color","fluid","xs","sm","md","lg","onClick","map","book","title","img","author","price","asin","_c","$RefreshReg$"],"sources":["/Users/gianluca/VISUAL/d2/src/components/LatestRelease.js"],"sourcesContent":["import { Container, Row } from 'react-bootstrap'; /* trovati online */\nimport jsonData from '../data/d2-json/fantasy.json';\nimport \"../Layout/BookCard.css\"\nimport MyBadge from './MyBadge';\nimport React,{useState} from 'react';\nimport SingleCard from './SingleCard';\n\nconst LatestReleasePage = () => {\n\n    const [selected, setSelected] = useState(false)\n    console.log(selected)\n    const toggleSelected = () => {\n        setSelected(!selected)//voglio che sia sempre il contrario di quello che è attualmente\n    }\n\n    return (\n        <div>\n            <h4 className=\"text-center mb-5\">Ultimi Arrivi</h4>\n           <>\n           <MyBadge\n                str=\"Ciao\"\n                color=\"primary\"\n           />\n                <Container fluid>\n                    <Row xs={1} sm={2} md={3} lg={4} className=\"g-3\" onClick={toggleSelected}>\n                        {jsonData.map((book) => (\n                            <SingleCard\n                                key = {book.asin}\n                                title = {book.title}\n                                img = {book.img}\n                                author = {book.author}\n                                price = {book.price}\n                                asin = {book.asin}\n                            />    \n                        ))}\n                    </Row>\n                </Container>\n            </>\n        </div>\n    );\n};\n\nexport default LatestReleasePage;\n\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,iBAAiB,CAAC,CAAC;AAClD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAO,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/CU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzBH,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;;EAED,oBACIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAIW,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpDf,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACAV,OAAA,CAACL,OAAO;QACHqB,GAAG,EAAC,MAAM;QACVC,KAAK,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACGf,OAAA,CAACR,SAAS;QAAC0B,KAAK;QAAAR,QAAA,eACZV,OAAA,CAACP,GAAG;UAAC0B,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACX,SAAS,EAAC,KAAK;UAACY,OAAO,EAAEd,cAAe;UAAAC,QAAA,EACpEhB,QAAQ,CAAC8B,GAAG,CAAEC,IAAI,iBACfzB,OAAA,CAACF,UAAU;YAEP4B,KAAK,EAAID,IAAI,CAACC,KAAM;YACpBC,GAAG,EAAIF,IAAI,CAACE,GAAI;YAChBC,MAAM,EAAIH,IAAI,CAACG,MAAO;YACtBC,KAAK,EAAIJ,IAAI,CAACI,KAAM;YACpBC,IAAI,EAAIL,IAAI,CAACK;UAAK,GALXL,IAAI,CAACK,IAAI;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAOvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA,gBACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEd,CAAC;AAACX,EAAA,CAjCID,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}