{"ast":null,"code":"var _jsxFileName = \"/Users/gianluca/VISUAL/d2/src/components/LatestRelease.js\",\n  _s = $RefreshSig$();\nimport { Container, Col, Row, Card, Badge } from 'react-bootstrap'; /* trovati online */\nimport jsonData from '../data/d2-json/fantasy.json';\nimport \"../Layout/BookCard.css\";\nimport MyBadge from './MyBadge';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LatestReleasePage = () => {\n  _s();\n  const [selected, setSelected] = useState(false);\n  const toggleSelected = () => {\n    setSelected(!selected); //voglio che sia sempre il contrario di quello che è attualmente\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: toggleSelected,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center mb-5\",\n      children: \"Ultimi Arrivi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyBadge, {\n        str: \"Ciao\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(MyBadge, {\n        str: \"Come stai?\",\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          className: \"g-3\",\n          children: [\" \", jsonData.map(book => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"h-100\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Card.Img, {\n                className: \"object-fit-cover w-100 book-card\",\n                src: book.img,\n                alt: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"text-truncate\",\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                  className: \"mb-2\",\n                  children: book.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"mb-1\",\n                  children: book.category.charAt(0).toUpperCase() + book.category.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  className: \"mb-2\",\n                  children: [\"\\u20AC\", book.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 41\n                }, this)]\n              }, book.asin, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(LatestReleasePage, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n_c = LatestReleasePage;\nexport default LatestReleasePage;\nvar _c;\n$RefreshReg$(_c, \"LatestReleasePage\");","map":{"version":3,"names":["Container","Col","Row","Card","Badge","jsonData","MyBadge","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LatestReleasePage","_s","selected","setSelected","toggleSelected","onClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","str","color","fluid","xs","sm","md","lg","map","book","Img","src","img","alt","title","Body","Title","Subtitle","author","Text","category","charAt","toUpperCase","slice","bg","price","asin","id","_c","$RefreshReg$"],"sources":["/Users/gianluca/VISUAL/d2/src/components/LatestRelease.js"],"sourcesContent":["import { Container, Col, Row, Card, Badge } from 'react-bootstrap'; /* trovati online */\nimport jsonData from '../data/d2-json/fantasy.json';\nimport \"../Layout/BookCard.css\"\nimport MyBadge from './MyBadge';\nimport React,{useState} from 'react';\n\nconst LatestReleasePage = () => {\n\n    const [selected, setSelected] = useState(false)\n    \n    const toggleSelected = () => {\n        setSelected(!selected)//voglio che sia sempre il contrario di quello che è attualmente\n    }\n\n    return (\n        <div onClick={toggleSelected}>\n            \n            <h4 className=\"text-center mb-5\">Ultimi Arrivi</h4>\n           <>\n           <MyBadge\n                str=\"Ciao\"\n                color=\"primary\"\n           />\n           <MyBadge\n                str=\"Come stai?\"\n                color=\"secondary\"\n           />\n                <Container fluid>\n                    <Row xs={1} sm={2} md={3} lg={4} className='g-3'> {/* numero colonne per ogni formato schermo */}\n                        {jsonData.map((book) => (\n                            <Col key={book.id}>\n                                <Card className=\"h-100\"> {/* non riesco a modificare altezza, la voglio fissa */}\n                                    <Card.Img className=\"object-fit-cover w-100 book-card\" src={book.img} alt={book.title} />\n                                    <Card.Body key={book.asin}>    \n                                        <Card.Title className=\"text-truncate\">{book.title}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2\">{book.author}</Card.Subtitle>\n                                        <Card.Text className=\"mb-1\">{book.category.charAt(0).toUpperCase() + book.category.slice(1)}</Card.Text>\n                                        <Badge bg=\"primary\" className=\"mb-2\">€{book.price}</Badge>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            </>\n        </div>\n    );\n};\n\nexport default LatestReleasePage;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}